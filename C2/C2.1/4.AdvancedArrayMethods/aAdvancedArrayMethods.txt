Usando o método every
    - Permite processar lógica específica para cada elemento de matriz para determinar se algum deles atende a alguma condição.
    - Ou seja, os elementos da matriz serão passados por uma função que valida alguma condição.
    - Parâmetros:
        - A função que deve ser executada para cada elemento do vetor. Essa função recebe:
            - value: (obrigatório) o valor do elemento atual
            - index: (opcional) o indice do elemento no array
            - array: (opcicional) o array na qual o elemento pertence
        - (Opcional) O valor a ser usado como "this".
    - Retornos:
        - true se a validação de todos os elementos for true.
        - Mas ao obter o primeiro resultado falso para qualquer item na matriz, ele sai e every retorna false.

Usando o método some
    - Funciona como o every, porém some verifica somente se algum item na matriz atende aos critérios.
    - Parâmetros:
        - A função que deve ser executada para cada elemento do vetor. Essa função recebe:
            - value: (obrigatório) o valor do elemento atual
            - index: (opcional) o indice do elemento no array
            - array: (opcicional) o array na qual o elemento pertence
        - (Opcional) O valor a ser usado como "this".
    - Retornos:
        - true se a função chamada retorna true para qualquer elemento (1).
        - false se todos os elementos na matriz retornam false.
    
Usando o método forEach
    - Permite que um aplicativo processe alguma lógica em relação a cada item na matriz. É executado para cada item único e não produz um valor de retorno.
    - Parâmetros:
        - A função que deve ser executada para cada elemento do vetor. Essa função recebe:
            - value: (obrigatório) o valor do elemento atual
            - index: (opcional) o indice do elemento no array
            - array: (opcicional) o array na qual o elemento pertence
        - (Opcional) O valor a ser usado como "this".

Usando o método filter
    - Fornece uma maneira de remover itens para uma matriz com base em algum processamento feito na função de retorno de chamada
    - Parâmetros:
        - A função que deve ser executada para cada elemento do vetor. Essa função recebe:
            - value: (obrigatório) o valor do elemento atual
            - index: (opcional) o indice do elemento no array
            - array: (opcicional) o array na qual o elemento pertence
        - (Opcional) O valor a ser usado como "this".
    - Retornos:
        - Uma nova matriz contendo os elementos que são incluídos com base em um valor de retorno de true ou false da função callback.

Usando o método map
    - Permite substituir valores na matriz. Cada elemento é passado para a função e seu retorno será usado para substituir na matriz.
    - Parâmetros:
        - A função que deve ser executada para cada elemento do vetor. Essa função recebe:
            - value: (obrigatório) o valor do elemento atual
            - index: (opcional) o indice do elemento no array
            - array: (opcicional) o array na qual o elemento pertence
        - (Opcional) O valor a ser usado como "this".
    - Retornos:
        - Uma nova matriz contendo os elementos alterados pela função.

Usando os métodos reduce e reduceRight
    - Permite reduzir o array a somente um valor. Cada elemento do array é passado para um função e retorno da função é passado para a proxima execução da função e assim é possível somar/concatenar, reduzindo o array para um valor.
    - Parâmetros:
        - A função que deve ser executada para cada elemento do vetor. Essa função recebe:
            - total: (Required) O valor inicial ou o valor retornada pela ultima execução da função.
            - currentValue: (Required) O valor do elemento atual.
            - currentIndex: (Optional) O indice do elemento atual no array.
            - arr: (Optional) O array atual.
        - initialValue: (Optional) O valor a ser usado como valor inicial na execução das funções.
    - Retornos:
        - o valor retornado pela execução de todas as funções.

TIP
    - Algumas funções avançadas permitem alterar a matriz de origem, enquanto outras não. Este é um aspecto importante para manter claro.